user nginx;
worker_processes  auto;
worker_cpu_affinity auto;
#worker_priority -20;
worker_rlimit_nofile 50000;
#worker_rlimit_sigpending 512;
pcre_jit on;
# Hardware SSL accelerator
#ssl_engine device;
#timer_resolution 20ms;
pid  /var/run/nginx.pid;

events {
  worker_connections 20000;
# worker_aio_requests 1000;
  use epoll;
# use kqueue;
  accept_mutex off;
# accept_mutex_delay 5ms;
  multi_accept on;
}

http {
  include       /etc/nginx/mime.types;
  charset UTF-8;
  default_type  application/octet-stream;
  #http2_chunk_size 8k;
  #http2_body_preread_size 64k;
  #http2_idle_timeout 15m;
  #http2_max_concurrent_streams 512;
  #http2_max_field_size 4k;
  #http2_max_header_size 16k;
  #http2_recv_buffer_size 256k;
  #http2_recv_timeout 30s;

  #log_format combined '$remote_addr - $remote_user [$time_local] '
  #            '"$request" $status $body_bytes_sent '
  #            '"$http_referer" "$http_user_agent"';
  #web后端去掉$rule_id,WAF防火墙规则id
  log_format  main  '$host '
              '$remote_addr - $remote_user [$time_local] "$request" '
              '$status $body_bytes_sent "$http_referer" '
              '"$http_user_agent" "$http_x_forwarded_for"'
              ' $upstream_response_time $request_time $upstream_cache_status';
  uninitialized_variable_warn off;
  #open_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;
  access_log  /var/log/nginx/access.log  main;
  error_log /var/log/nginx/error.log;

  server_tokens off;
  #重定向使用域名(Host头)
  server_name_in_redirect on;
  server_names_hash_bucket_size 256;
  #connection_pool_size 4096;
  disable_symlinks off;
  etag on;
  ignore_invalid_headers on;
  merge_slashes on;
  keepalive_disable msie6;
  client_header_buffer_size 4k;
  large_client_header_buffers 4 32k;
  client_header_timeout  1m;
  client_body_timeout    1m;
  reset_timedout_connection on;
  send_timeout           1m;

  open_file_cache max=1000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;
  read_ahead 128k;
  sendfile        on;
  sendfile_max_chunk 512k;
# aio threads=default;
# aio_write on;
# aio sendfile;
# aio threads;
# directio 4m;
  tcp_nodelay   on;
  tcp_nopush    on;
  client_max_body_size 100m;
  client_body_buffer_size 8m;
  types_hash_max_size 2048;
  #request_pool_size 4k;
  keepalive_timeout  60;
  keepalive_requests 5000;
  lingering_close on;
  recursive_error_pages      on;
  output_buffers 8 64k;
  postpone_output 1460;

  fastcgi_connect_timeout      600;
  fastcgi_intercept_errors    on;
  fastcgi_send_timeout         600;
  fastcgi_read_timeout         600;
  fastcgi_buffer_size          128k;
  fastcgi_buffers 16           256k;
  fastcgi_busy_buffers_size    256k;
  fastcgi_temp_file_write_size 256k;
  #fastcgi_temp_path  /var/tmp/fastcgi_temp;
  #client_body_temp_path  /var/tmp/client_body_temp;
  #fastcgi_cache_path /var/run/nginx/fastcgi_cache levels=2:2 keys_zone=TEST:320m inactive=16m max_size=2g;
  #fastcgi_cache     TEST;
  #fastcgi_cache_key  unix:/var/run/php-fpm.sock$request_uri;
  #fastcgi_cache_key  127.0.0.1:9000$request_uri;
  #fastcgi_cache_key  $request_method://$host$request_uri;
  #fastcgi_cache_methods  POST;
  #fastcgi_cache_valid 200 302 1h;
  #fastcgi_cache_valid 301 2h;
  #fastcgi_cache_valid any 1m;
  #fastcgi_cache_min_uses 1;
  #fastcgi_cache_use_stale error timeout invalid_header http_500;
  #fastcgi_keep_conn on;

  #proxy_cache仅用于前端反向代理，后端关掉避免浪费内存
  #proxy_cache_path  /var/lib/nginx/tmp/proxy_cache  levels=2:2 keys_zone=proxy_cache:512m inactive=2d max_size=8g;
  proxy_cache_methods GET HEAD;
  #proxy_cache_background_update on;
  proxy_http_version 1.1;
  proxy_set_header Connection "";
  proxy_set_header Host  $host;
  #proxy_set_header Accept-Encoding 'gzip';
  #proxy_set_header X-Real-IP $realip_remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto   $scheme;
  #避免一次将大文件加入缓存
  proxy_set_header Range $http_range;
  proxy_set_header If-Range $http_if_range;
  proxy_no_cache  $http_range $http_if_range;
  proxy_hide_header X-Powered-By;
  proxy_cache_lock          off;
  proxy_cache_lock_timeout  5s;
  proxy_cache_use_stale     error timeout invalid_header http_403 http_404 http_500 http_502 http_503 http_504;
  #不在静态定义列表的内容都视为动态内容，不进行缓存,避免缓存导致访问异常
  proxy_buffering off;
  proxy_connect_timeout 600;
  proxy_send_timeout 600;
  proxy_read_timeout 600;
  proxy_buffer_size 128k;
  proxy_buffers 8 128k;
  proxy_busy_buffers_size 256k;
  proxy_temp_file_write_size 256k;
  proxy_max_temp_file_size 64m;
  #屏蔽后端错误信息
  proxy_intercept_errors  on;
  proxy_ignore_client_abort on;
  #proxy_temp_path  /var/lib/nginx/tmp/proxy;
  proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

  gzip  on;
  gzip_disable "msie6";
  #gzip_static on;
  gzip_proxied any;
  gzip_min_length  4k;
  gzip_buffers     32 8k;
  gzip_http_version 1.1;
  gzip_comp_level 2;
  gzip_types       text/plain text/css text/xml text/javascript application/json application/x-javascript application/javascript application/xml application/xml+rss font/ttf font/otf image/svg+xml;
  gzip_vary on;

  vhost_traffic_status_zone;


  server {
    listen 80 backlog=16384 bind so_keepalive=on default_server;
    server_name  _;
#   return 444;

    #charset koi8-r;
    #access_log  /var/log/nginx/log/host.access.log  main;

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt { access_log off; log_not_found off; }

    #nginx-module-vts
    location /status {
            vhost_traffic_status_display;
            vhost_traffic_status_display_format html;
    }
    location = /upstream_show {
               upstream_show;
    }


    location /nginx/status {
      check_status;
      access_log off;
      #allow 10.0.0.0/8;
      #allow 127.0.0.1/32;
      #deny all;
    }


    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    error_page  404              /404.html;
    location = /404.html {
        root   /usr/share/nginx/html;
    }

    error_page  401 403          /40x.html;
    location = /40x.html {
        root   /usr/share/nginx/html;
    }

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000

    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one

    #location ~ /\.ht {
    #    deny  all;
    #}
  }

include /etc/nginx/conf.d/*.conf;
include /etc/nginx/sites-enabled/*.conf;

}

