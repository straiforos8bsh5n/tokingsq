apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ include "name" . | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  serviceName: {{ template "fullname" . }}-headless
  replicas: {{ .Values.Servers }}
  template:
    metadata:
      labels:
        app: {{ include "name" . | quote }}
        release: {{ .Release.Name | quote }}
      annotations:
        #disable istio sidecar injection
        sidecar.istio.io/inject: "false"
    spec:
      {{- if eq .Values.AntiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: {{ include "name" . | quote }}
                  release: {{ .Release.Name | quote }}
      {{- else if eq .Values.AntiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchLabels:
                    app: {{ include "name" . | quote }}
                    release: {{ .Release.Name | quote }}
      {{- end }}
      securityContext:
        sysctls:
          #kubenetes >= v1.11 and kernel version >= 4.15 needed
          #- name: kernel.msgmax
          #  value: "65536"
          - name: net.ipv4.tcp_syncookies
            value: "0"
          - name: net.ipv4.ip_local_port_range
            value: "1024 65535"
          - name: net.core.somaxconn
            value: "65535"
          - name: net.ipv4.ip_unprivileged_port_start
            value: "0"
          - name: net.ipv4.tcp_tw_reuse
            value: "1"
          - name: net.ipv4.tcp_fin_timeout
            value: "30"
          - name: net.ipv4.tcp_keepalive_intvl
            value: "10"
          - name: net.ipv4.tcp_keepalive_probes
            value: "2"
          - name: net.ipv4.tcp_keepalive_time
            value: "120"
          - name: net.ipv4.tcp_ecn
            value: "1"
          - name: net.ipv4.tcp_max_syn_backlog
            value: "65536"
          - name: net.ipv4.tcp_rfc1337
            value: "1"
          - name: net.ipv4.tcp_slow_start_after_idle
            value: "0"
          - name: net.ipv4.tcp_fack
            value: "1"
          - name: net.ipv4.tcp_max_tw_buckets
            value: "262144"
          - name: net.ipv4.tcp_fastopen
            value: "3"
          - name: net.ipv4.icmp_ratelimit
            value: "100"
          - name: net.ipv4.tcp_abort_on_overflow
            value: "1"
          - name: net.ipv4.tcp_adv_win_scale
            value: "2"
          - name: net.ipv4.tcp_retries2
            value: "8"
          - name: net.ipv4.tcp_syn_retries
            value: "3"
          - name: net.ipv4.tcp_synack_retries
            value: "2"
          - name: net.unix.max_dgram_qlen
            value: "512"
          - name: net.ipv4.tcp_fwmark_accept
            value: "1"
          - name: net.ipv4.fwmark_reflect
            value: "1"
      containers:
      - name: k8szk
        imagePullPolicy: {{ .Values.ImagePullPolicy }}
        #image: slpcat/k8szk:v2
        image: slpcat/zookeeper:alpine
        resources:
{{ toYaml .Values.Resources | indent 10 }}
        ports:
        - containerPort: {{ .Values.ClientPort }}
          name: client
        - containerPort: {{ .Values.ServerPort }}
          name: server
        - containerPort: {{ .Values.LeaderElectionPort }}
          name: leader-election
        env:
        - name : ZK_REPLICAS
          value: "{{ .Values.Servers }}"
        - name : ZK_HEAP_SIZE
          value: "{{ .Values.Heap }}"
        - name : ZK_TICK_TIME
          value: "{{ .Values.TickTimeMs }}"
        - name : ZK_INIT_LIMIT
          value: "{{ .Values.InitTicks }}"
        - name : ZK_SYNC_LIMIT
          value: "{{ .Values.SyncTicks }}"
        - name : ZK_MAX_CLIENT_CNXNS
          value: "{{ .Values.ClientCnxns }}"
        - name: ZK_SNAP_RETAIN_COUNT
          value: "{{ .Values.SnapRetain }}"
        - name: ZK_PURGE_INTERVAL
          value: "{{ .Values.PurgeHours }}"
        - name: ZK_LOG_LEVEL
          value: {{ .Values.LogLevel }}
        - name: ZK_CLIENT_PORT
          value: "{{ .Values.ClientPort }}"
        - name: ZK_SERVER_PORT
          value: "{{ .Values.ServerPort }}"
        - name: ZK_ELECTION_PORT
          value: "{{ .Values.LeaderElectionPort }}"
        command:
        - sh
        - -c
        - zkGenConfig.sh && exec zkServer.sh start-foreground
        readinessProbe:
          exec:
            command:
            - "zkOk.sh"
          initialDelaySeconds: {{ .Values.ProbeInitialDelaySeconds }}
          timeoutSeconds: {{ .Values.ProbeTimeoutSeconds }}
        livenessProbe:
          exec:
            command:
            - "zkOk.sh"
          initialDelaySeconds: {{ .Values.ProbeInitialDelaySeconds }}
          timeoutSeconds: {{ .Values.ProbeTimeoutSeconds }}
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/zookeeper
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.Storage }}
      {{- if .Values.StorageClass }}
      storageClassName: {{ .Values.StorageClass | quote }}
      {{- end }}
