# The MySQL database server configuration file.
#
# Mysql in container 
# Date: 20171107
# You can copy this to one of:
# - "/etc/mysql/my.cnf" to set global options,
# - "~/.my.cnf" to set user-specific options.
# 
# One can use all long options that the program supports.
# Run program with --help to get a list of available options and with
# --print-defaults to see which it would actually understand and use.
#
# For explanations see
# http://dev.mysql.com/doc/mysql/en/server-system-variables.html

# This will be passed to all mysql clients
# It has been reported that passwords should be enclosed with ticks/quotes
# escpecially if they contain "#" chars...
# Remember to edit /etc/mysql/debian.cnf when changing the socket location.

[mysqld_safe]
# Increase the amount of open files allowed per process. Warning: Make
# sure you have set the global system limit high enough! The high value
# is required for a large number of opened tables
open-files-limit = 8192
#socket		= /var/run/mysqld/mysqld.sock
nice			= 0

[mysqld]
#
# * Basic Settings
#
skip-external-locking
#
# Instead of skip-networking the default is now to listen only on
# localhost which is more compatible and is not less secure.
#bind-address		= 127.0.0.1
#skip-networking
skip-host-cache
skip-name-resolve

#audit_log_rotate_on_size = 104857600
#audit_log_rotations = 10

# * Fine Tuning
#
#memlock
default-storage-engine  = InnoDB
character_set_server    = utf8
collation_server        = utf8_general_ci
explicit_defaults_for_timestamp = true
max_write_lock_count    = 32
#low_priority_updates   = 1
#key_buffer          = 16M
#sql_buffer_result	= 1
sort_buffer_size    = 128K
join_buffer_size    = 128K
#table_cache        = 64
table_open_cache    = 2000
#table_open_cache_instances = 16
thread_stack		= 192K
#thread_cache_size   = 32
#thread_handling		= pool-of-threads
#thread_pool_oversubscribe = 10
interactive_timeout = 600
wait_timeout        = 300
max_allowed_packet	= 16M
back_log            = 1000
max_connections     = 1000
max_connect_errors  = 2000
query_cache_limit	= 1M
query_cache_size    = 8M
#query_cache_type    = 0
query_cache_min_res_unit = 1k
flush_time = 600
max_heap_table_size = 16M
#tmp_table_size      = 16M
# Minimum word length to be indexed by the full text search index.
# You might wish to decrease it if you need to search for shorter words.
# Note that you need to rebuild your FULLTEXT index, after you have
# modified this value.
#ft_min_word_len = 4

# Set the default transaction isolation level. Levels available are:
# READ-UNCOMMITTED, READ-COMMITTED, REPEATABLE-READ, SERIALIZABLE
transaction_isolation =  READ-COMMITTED

# * Logging 

# Both location gets rotated by the cronjob.
# Be aware that this log type is a performance killer.
# As of 5.1 you can enable the log at runtime!
#general_log_file        = /var/log/mysql/mysql.log
#general_log             = 1
#

# Error log - should be very few entries.
#log_error = /var/log/mysql/error.log
# Print warnings to the error log file.  If you have any problem with
# MySQL you should enable logging of warnings and examine the error log
# for possible explanations. 
log_warnings

# Log slow queries.
slow_query_log      = 1
long_query_time     = 2
#slow_query_log_file = /var/log/mysql/mysql-slow.log
#log_queries_not_using_indexes
log-slow-admin-statements = 0

# Enable binary logging. This is required for acting as a MASTER in a
# replication configuration. You also need the binary log if you need
# the ability to do point in time recovery from your latest backup.

log-bin		    = mysql-bin
log-bin-index   = mysql-bin.index

# binary logging format - mixed recommended
binlog_format   = row
sync_binlog     = 0
expire_logs_days    = 10
max_binlog_size     = 128M
#binlog_do_db		= include_database_name
#binlog_ignore_db	= include_database_name
binlog_cache_size   = 16M
#binlog_rows_query_log_events = 1


# If you're using replication with chained slaves (A->B->C), you need to
# enable this option on server B. It enables logging of updates done by
# the slave thread into the slave's binary log.
#log_slave_updates

# Enable the full query log. Every query (even ones with incorrect
# syntax) that the server receives will be logged. This is useful for
# debugging, it is usually disabled in production use.
#log

# ***  Replication related settings 
# Unique server identification number between 1 and 2^32-1. This value
# is required for both master and slave hosts. It defaults to 1 if
# "master-host" is not set, but will MySQL will not function as a master
# if it is omitted.
# The following can be used as easy to replay backup logs or for replication.
# note: if you are setting up a replication slave, see README.Debian about
#       other settings you may need to change.
server-id = 16
# Replication Slave (comment out master section to use this)
#
# To configure this host as a replication slave, you can choose between
# two methods :
#
# 1) Use the CHANGE MASTER TO command (fully described in our manual) -
#    the syntax is:
#
#    CHANGE MASTER TO MASTER_HOST=<host>, MASTER_PORT=<port>,
#    MASTER_USER=<user>, MASTER_PASSWORD=<password> ;
#
#    where you replace <host>, <user>, <password> by quoted strings and
#    <port> by the master's port number (3306 by default).
#
#    Example:
#
#    CHANGE MASTER TO MASTER_HOST='125.564.12.1', MASTER_PORT=3306,
#    MASTER_USER='joe', MASTER_PASSWORD='secret';
#
# 2) Set the variables below. However, in case you choose this method, then
#    start replication for the first time (even unsuccessfully, for example
#    if you mistyped the password in master-password and the slave fails to
#    connect), the slave will create a master.info file, and any later
#    changes in this file to the variable values below will be ignored and
#    overridden by the content of the master.info file, unless you shutdown
#    the slave server, delete master.info and restart the slaver server.
#    For that reason, you may want to leave the lines below untouched
#    (commented) and instead use CHANGE MASTER TO (see above)
#
# required unique id between 2 and 2^32 - 1
# (and different from the master)
# defaults to 2 if master-host is set
# but will not function as a slave if omitted
#server-id = 2
#
# The replication master for this slave - required
#master-host = <hostname>
#master-user = <username>
#master-password = <password>
#master-port = <port>

# Make the slave read-only. 
#read_only

#gtid_mode = ON 
#enforce-gtid-consistency = ON 
#slave_parallel_workers = 4 
expire_logs_days    = 7
max_relay_log_size  = 50M 
relay_log_purge     = 1 
relay_log_recovery  = 1  
master_verify_checksum = 1
slave_sql_verify_checksum = 1 
#slave_allow_batching = 1

#
# *** MyISAM Specific options ***
concurrent_insert   = 2
#bulk_insert_buffer_size = 64M
read_buffer_size    = 256K
read_rnd_buffer_size = 256K
# This replaces the startup script and checks MyISAM tables if needed
# the first time they are touched
#myisam-recover      = BACKUP
#myisam_sort_buffer_size = 320M
#myisam_max_sort_file_size = 10G
#myisam_repair_threads = 1

#
# *** INNODB Specific options ***
#
# InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.
# Read the manual for more InnoDB related options. There are many!
#
# * Security Features
#
# Read the manual, too, if you want chroot!
# chroot = /var/lib/mysql/
#
# For generating SSL certificates I recommend the OpenSSL GUI "tinyca".
#
# ssl-ca=/etc/mysql/cacert.pem
# ssl-cert=/etc/mysql/server-cert.pem
# ssl-key=/etc/mysql/server-key.pem

#skip-innodb

#innodb_additional_mem_pool_size = 16M

# InnoDB, unlike MyISAM, uses a buffer pool to cache both indexes and
# row data. The bigger you set this the less disk I/O is needed to
# access data in tables. On a dedicated database server you may set this
# parameter up to 80% of the machine physical memory size. Do not set it
# too large, though, because competition of the physical memory may
# cause paging in the operating system.  Note that on 32bit systems you
# might be limited to 2-3.5G of user level memory per process, so do not
# set it too high.
#innodb_buffer_pool_size = 24G
#innodb_buffer_pool_instances = 16
#innodb_buffer_pool_dump_at_shutdown = 1
#innodb_buffer_pool_load_at_startup = 1

# InnoDB stores data in one or more data files forming the tablespace.
# If you have a single logical drive for your data, a single
# autoextending file would be good enough. In other cases, a single file
# per device is often a good choice. You can configure InnoDB to use raw
# disk partitions as well - please refer to the manual for more info
# about this.
#innodb_data_file_path = ibdata1:128M:autoextend
#innodb_data_file_path = /dev/raw/raw1:16Gnewraw
innodb_file_per_table = 1
# Set this option if you would like the InnoDB tablespace files to be
# stored in another location. By default this is the MySQL datadir.
#innodb_data_home_dir = <directory>
#innodb_data_home_dir =
# Number of IO threads to use for async IO operations. This value is
# hardcoded to 8 on Unix, but on Windows disk I/O may benefit from a
# larger number.
innodb_write_io_threads = 8
innodb_read_io_threads = 16

# If you run into InnoDB tablespace corruption, setting this to a nonzero
# value will likely help you to dump your tables. Start from value 1 and
# increase it until you're able to dump the table successfully.
#innodb_force_recovery=1

# Number of threads allowed inside the InnoDB kernel. The optimal value
# depends highly on the application, hardware as well as the OS
# scheduler properties. A too high value may lead to thread thrashing.
#innodb_thread_concurrency = 0

# If set to 1, InnoDB will flush (fsync) the transaction logs to the
# disk at each commit, which offers full ACID behavior. If you are
# willing to compromise this safety, and you are running small
# transactions, you may set this to 0 or 2 to reduce disk I/O to the
# logs. Value 0 means that the log is only written to the log file and
# the log file flushed to disk approximately once per second. Value 2
# means the log is written to the log file at each commit, but the log
# file is only flushed to disk approximately once per second.
innodb_flush_log_at_trx_commit = 2

# Speed up InnoDB shutdown. This will disable InnoDB to do a full purge
# and insert buffer merge on shutdown. It may increase shutdown time a
# lot, but InnoDB will have to do it on the next startup instead.
#innodb_fast_shutdown

# The size of the buffer InnoDB uses for buffering log data. As soon as
# it is full, InnoDB will have to flush it to disk. As it is flushed
# once per second anyway, it does not make sense to have it very large
# (even with long transactions). 
#innodb_log_buffer_size = 128M

# Size of each log file in a log group. You should set the combined size
# of log files to about 25%-100% of your buffer pool size to avoid
# unneeded buffer pool flush activity on log file overwrite. However,
# note that a larger logfile size will increase the time needed for the
# recovery process.
#innodb_log_file_size = 512M

# Total number of files in the log group. A value of 2-3 is usually good
# enough.
innodb_log_files_in_group = 2

# Location of the InnoDB log files. Default is the MySQL datadir. You
# may wish to point it to a dedicated hard drive or a RAID1 volume for
# improved performance
#innodb_log_group_home_dir = /var/lib/mysql/data

# Maximum allowed percentage of dirty pages in the InnoDB buffer pool.
# If it is reached, InnoDB will start flushing them out agressively to
# not run out of clean pages at all. This is a soft limit, not
# guaranteed to be held.
innodb_max_dirty_pages_pct = 60

# The flush method InnoDB will use for Log. The tablespace always uses
# doublewrite flush logic. The default value is "fdatasync", another
# option is "O_DSYNC".
innodb_flush_method     = O_DIRECT
innodb_flush_neighbors  = 1
innodb_adaptive_flushing = 1
#innodb_adaptive_flushing_method = "estimate"
innodb_adaptive_hash_index = 1
innodb_lock_wait_timeout = 60
innodb_io_capacity      = 8000
#innodb_file_format     = barracuda
#innodb_file_format_max = barracuda
#innodb_commit_concurrency = 1
#innodb_page_size       = 8k
#innodb_checksums       = 0
innodb_doublewrite      = 0
innodb_support_xa       = 1
innodb_use_native_aio   = 1
innodb_stats_persistent = 1
innodb_purge_threads    = 1
innodb_sync_spin_loops  = 100
innodb_spin_wait_delay  = 30
#innodb-read-ahead-threshold = both
#innodb_stats_update_need_lock = 0
#innodb_stats_auto_update = 0
innodb_old_blocks_time  = 1000
innodb_old_blocks_pct   = 60
innodb_open_files       = 4096
#innodb_locks_unsafe_for_binlog = 0
