apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "hadoop.fullname" . }}-hdfs-nn
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/hadoop-configmap.yaml") . | sha256sum }}
  labels:
    app: {{ template "hadoop.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: hdfs-nn
spec:
  serviceName: {{ template "hadoop.fullname" . }}-hdfs-nn
  selector:
    matchLabels:
      app: {{ template "hadoop.name" . }}
      component: hdfs-nn
      release: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "hadoop.name" . }}
        release: {{ .Release.Name }}
        component: hdfs-nn
    spec:
      affinity:
        podAntiAffinity:
        {{- if eq .Values.antiAffinity "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app:  {{ template "hadoop.name" . }}
                release: {{ .Release.Name | quote }}
                component: hdfs-nn
        {{- else if eq .Values.antiAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app:  {{ template "hadoop.name" . }}
                  release: {{ .Release.Name | quote }}
                  component: hdfs-nn
        {{- end }}
      terminationGracePeriodSeconds: 0
      nodeSelector:
        hdfs: enabled
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: hdfs-nn
        image: {{ .Values.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
        - "/bin/bash"
        - "/tmp/hadoop-config/bootstrap.sh"
        - "-d"
        env:
        - name: DAEMON
          value: NAME_NODE
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HADOOP_HEAPSIZE
          valueFrom:
            resourceFieldRef:
              containerName: hdfs-nn
              resource: limits.memory
              divisor: 1Mi
        - name: HADOOP_OPTS
          value: "-server -Djava.awt.headless=true -Djava.nio.channels.spi.SelectorProvider=sun.nio.ch.EPollSelectorProvider -Xverify:none -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=512m -XX:ReservedCodeCacheSize=240M -XshowSettings:vm -XX:+AggressiveOpts -XX:-UseBiasedLocking -XX:+UseFastAccessorMethods -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseG1GC -XX:+ExplicitGCInvokesConcurrent -XX:SoftRefLRUPolicyMSPerMB=0 -XX:G1ReservePercent=25 -XX:G1NewSizePercent=10 -XX:G1MaxNewSizePercent=25 -XX:MaxGCPauseMillis=20 -XX:-OmitStackTraceInFastThrow -XX:+ParallelRefProcEnabled -XX:ParallelGCThreads=8 -XX:MaxTenuringThreshold=1 -XX:G1HeapWastePercent=10 -XX:SurvivorRatio=8 -XX:G1MixedGCCountTarget=16 -XX:G1MixedGCLiveThresholdPercent=90 -XX:InitiatingHeapOccupancyPercent=35 -XX:G1HeapRegionSize=32m -XX:+PerfDisableSharedMem -XX:-ResizePLAB"
        resources:
{{ toYaml .Values.hdfs.nameNode.resources | indent 10 }}
        readinessProbe:
          httpGet:
            path: /
            port: 50070
          initialDelaySeconds: 5
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /
            port: 50070
          initialDelaySeconds: 10
          timeoutSeconds: 2
        volumeMounts:
        - name: hadoop-config
          mountPath: /tmp/hadoop-config
        {{- if .Values.persistence.nameNode.enabled }}
        - name: dfs
          mountPath: /root/hdfs/namenode
        {{- end }}
      volumes:
      - name: hadoop-config
        configMap:
          name: {{ template "hadoop.fullname" . }}
{{- if .Values.persistence.nameNode.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: dfs
    spec:
      accessModes:
      - {{ .Values.persistence.nameNode.accessMode | quote }}
{{- if .Values.persistence.nameNode.storageClass }}
{{- if (eq "-" .Values.persistence.nameNode.storageClass) }}
      storageClassName: ""
{{- else }}
      storageClassName: "{{ .Values.persistence.nameNode.storageClass }}"
{{- end }}
{{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.nameNode.size | quote }}
{{- end }}
