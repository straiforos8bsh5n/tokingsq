image:
  repository: registry
  tag: '2.6.2'
  pullPolicy: 'IfNotPresent'
  pullSecrets: []
service:
  name: registry
  type: ClusterIP
  externalPort: 5000
  internalPort: 5000
  clusterIP: '0.0.0.0'

## Enable/Disable
enabled: true

ingress:
  enabled: true
  proxyReadTimeout: 900
  proxyBodySize: "0"
  proxyBuffering: "off"
  tls: {}
    # secretName:
  annotations: {}

global:
  ingress:
    enabled: true
    annotations: {}
    tls: {}
      # secretName:
  hosts:
    domain: example.com
    hostSuffix:
    https: true
    tls: {}
      # secretName:
    gitlab: {}
      #name: gitlab.example.com
      #https: false
    registry: {}
      #name: registry.example.com
      #https: false
    minio: {}
      #name: minio.example.com
      #https: false
  minio:
    enabled:
    credentials: {}
  registry:
    certificate: {}
    httpSecret: {}

## Control the InitContainer behaviors.
init:
  image: "busybox"
  tag: "latest"
  pullPolicy: "IfNotPresent"
  resources:
    requests:
      cpu: 50m
  script: |-
    if [ -e /config/accesskey ] ; then
      sed -e 's@ACCESS_KEY@'"$(cat /config/accesskey)"'@' -e 's@SECRET_KEY@'"$(cat /config/secretkey)"'@' /config/config.yml > /registry/config.yml
    else
      cp /config/config.yml  /registry/config.yml
    fi
    # Place the `http.secret` value from the kubernetes secret
    sed -i -e 's@HTTP_SECRET@'"$(cat /config/httpSecret)"'@' /registry/config.yml
    # Insert any provided `storage` block from kubernetes secret
    if [ -d /config/storage ]; then
      # Copy contents of storage secret(s)
      mkdir -p /registry/storage
      cp /config/storage/* /registry/storage/
      # Indent /registry/storage/config 2 spaces before inserting into config.yml
      sed -i 's/^/  /' /registry/storage/config
      # Insert into /registry/config.yml after `storage:`
      sed -i '/storage:/ r /registry/storage/config' /registry/config.yml
      # Remove the now extraneous `config` file
      rm /registry/storage/config
    fi
    # Set to known path, to used ConfigMap
    cat /config/certificate.crt > /registry/certificate.crt

# define some sane resource requests and limitations
resources:
  # limits:
  #   cpu: 200m
  #   memory: 1024Mi
  requests:
    cpu: 50m
    memory: 32Mi

# Chart operation controls
enabled: true
# Protocol/Host only. '/jwt/auth' will be appended.
authEndpoint:
# Do not change this
tokenService: 'container_registry'
# This must match your GitLab Rails configuration
tokenIssuer: 'gitlab-issuer'
# if replicas is >1, shared storage MUST be used.
minReplicas: 2
maxReplicas: 10
maxUnavailable: 1
storage: {}
minio: {}
