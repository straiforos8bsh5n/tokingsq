http://www.dockone.io/article/10632

1.根据服务(namespace)维度拆分Prometheus

prometheus-operator 集成系统/集群级别监控

根据 namespace 来拆分 Prometheus 实例,例如将所有 Kubernetes 集群组件相关的监控发送到一个 Prometheus 实例，将其他所有监控发送到另一个 Prometheus 实例。
本示例分为两个: 系统级别监控替代原始prometheus,业务级别监控prometheus-app

单独建立一个app 业务监控

kubectl label namespace app-a  monitoring-role=app

其余namespace使用system监控

kubectl label namespace kube-system monitoring-role=system
kubectl label namespace default monitoring-role=system
kubectl label namespace kube-public monitoring-role=system
kubectl label namespace kube-system monitoring-role=system
kubectl label namespace monitoring monitoring-role=system
kubectl label namespace kong monitoring-role=system

删除operator原有的prometheus
prometheus-prometheus.yaml

创建2个新的prometheus
prometheus-prometheus-thanos-receiver.yml
prometheus-prometheus-app-thanos-receiver.yml
prometheus-app-service.yml

alert-rule 建议本集群使用
不建议远程rule和alert

2.prometheus-operator整合thanos-receiver
使用remote write目的使用方式尽量与其他存储方案一致，便于切换。
remote-write

3.prometheus-operator整合阿里云sls-metricstore
sls-ak.yml
prometheus-prometheus-sls-metricstore.yml

https://help.aliyun.com/document_detail/171781.html?spm=a2c4g.11174283.6.905.2a751caa0Sdv7j

日志服务MetricStore的URL，格式为https://{project}.{sls-enpoint}/prometheus/{project}/{metricstore}/api/v1/write。其中{sls-enpoint}请参见服务入口，{project}和{metricstore}替换为您对应的Project和MetricStore。

4.grafana-dashboard
grafana两类：本集群内置，外部全局跨集群

内置grafana只能查看本集群监控，不能看其他集群

外部grafana可以全局跨集群查看

阿里sls对接Grafana
https://developer.aliyun.com/article/765358

URL：日志服务MetricStore的URL，格式为https://{project}.{sls-enpoint}/prometheus/{project}/{metricstore}。其中{sls-enpoint}为Project所在地域的Endpoint，详情请参见服务入口，{project}和{metricstore}为您已创建的日志服务的Project和Metricstore，请根据实际值替换。例如：https://sls-prometheus-test.cn-hangzhou.log.aliyuncs.com/prometheus/sls-prometheus-test/prometheus。

Basic Auth Details
User为阿里云账号AccessKeyID。
Password为阿里云账号AccessKeySecret。
建议您使用仅具备指定Project只读权限的RAM用户账号


