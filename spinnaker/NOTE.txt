下面介绍一下每个组件在spinnaker中作用

Deck：面向用户 UI 界面组件，提供直观简介的操作界面，可视化操作发布部署流程。

API： 面向调用 API 组件，我们可以不使用提供的
UI，直接调用 API 操作，由它后台帮我们执行发布等任务。

Gate：是 API 的网关组件，可以理解为代理，所有请求由其代理转发。

Rosco：是构建 beta 镜像的组件，需要配置 Packer 组件使用。

Orca：是核心流程引擎组件，用来管理流程。

Igor：是用来集成其他 CI 系统组件，如 Jenkins 等一个组件。
Echo：是通知系统组件，发送邮件等信息。

Front50：是存储管理组件，需要配置 Redis、Cassandra 等组件使用。
Cloud driver 是它用来适配不同的云平台的组件，比如 Kubernetes，Google、AWS EC2、Microsoft Azure 等。
Fiat 是鉴权的组件，配置权限管理，支持 OAuth、SAML、LDAP、GitHub teams、Azure groups、 Google Groups 等。

https://spinnaker.io/setup/install/halyard/#install-halyard-on-docker
https://github.com/zeyangli/spinnaker-cd-install

安装过程 
方案一
docker + kubernetes
运行halyard容器

docker run -d -p 8084:8084 -p 9000:9000 \
    --name halyard --rm \
    -v ~/.hal:/home/spinnaker/.hal \
    -v ~/.kube:/home/spinnaker/.kube \
    -it \
    slpcat/halyard:stable
    us-docker.pkg.dev/spinnaker-community/docker/halyard:stable

本文以1.25.4为例

环境配置参数



准备

获取docker镜像推送到私有仓库

配置docker-registry provider


配置k8s provider


选择Spinnaker的部署环境

创建存储，用来保存spinnaker需要持久保存的数据

##关闭s3版本控制
mkdir -p ~/.hal/default/profiles
touch ~/.hal/default/profiles/front50-local.yml
echo 'spinnaker.s3.versioning: false' >> ~/.hal/default/profiles/front50-local.yml

minio

echo $MINIO_SECRET_KEY | hal config storage s3 edit --endpoint $ENDPOINT \
    --path-style-access true \
    --bucket spinnaker \
    --root-folder spinnaker \
    --access-key-id $MINIO_ACCESS_KEY \
    --secret-access-key

配置存储信息

# 设置时区 
hal config edit --timezone Asia/Shanghai 

生成pom配置
hal version bom 1.25.4  -q -o yaml
路径 /home/spinnaker/.hal/.boms/bom/1.25.4.yml

修改pom
hal config version edit --version local:1.25.4 --no-validate

hal config api edit --cors-access-pattern 
hal config security api edit --cors-access-pattern spin-gate.spinnaker

# 访问方式：设置deck与gate的域名 
hal config security ui edit --override-base-url http://spin-deck.spinnaker:9000
hal config security api edit --override-base-url http://spin-gate.spinnaker:8084

创建ingress
deck-ingress
gate-ingress

部署spinnaker

hal deploy apply


#启用chaos
hal config features edit --chaos True
#查看spinnaker版本
hal version list

Halyard初始化配置

添加镜像仓库（Harbor）和K8s集群账户

开启特性功能（pipeline-templates、artifacts、managed-pipeline-templates-v2-ui）

配置JenkinsCI集成

配置GitHub/GitLab集成

方案二
使用 Spinnaker Operator
