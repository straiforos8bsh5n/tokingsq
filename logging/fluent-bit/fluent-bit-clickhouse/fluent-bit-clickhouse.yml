apiVersion: v1
kind: ConfigMap
metadata:
name: k8s-log-agent-config
namespace: kube
labels:
k8s-app: k8s-log-agent
data:
# Configuration files: server, input, filters and output
# ======================================================
fluent-bit.conf: |
[SERVICE]
    Flush         1
    Log_Level     error
    Daemon        off
    Parsers_File  parsers.conf
    HTTP_Server   On
    HTTP_Listen   0.0.0.0
    HTTP_Port     2020

@INCLUDE input-kubernetes.conf
@INCLUDE filter-kubernetes.conf
@INCLUDE output-kubernetes.conf

input-kubernetes.conf: |
[INPUT]
    Name              tail
    Tag               kube.*
    Path              /var/log/containers/*.log
    Parser            docker
    DB                /var/log/flb_kube.db
    Mem_Buf_Limit     5MB
    Skip_Long_Lines   On
    Refresh_Interval  10

filter-kubernetes.conf: |
[FILTER]
    Name                kubernetes
    Match               *
    Kube_URL            https://kubernetes.default.svc.cluster.local:443
    Merge_Log           On
    Annotations         Off
    Kube_Tag_Prefix     kube.var.log.containers.
    Merge_Log_Key       log_processed

[FILTER]
    Name                modify
    Match               *
    Set  cluster  ${CLUSTER_NAME}
output-kubernetes.conf: |
# [OUTPUT]
#     Name            stdout
#     Match           *
# [OUTPUT]
#     Name            es
#     Match           *
#     Host            ${FLUENT_ELASTICSEARCH_HOST}
#     Port            ${FLUENT_ELASTICSEARCH_PORT}
#     Logstash_Format On
#     Retry_Limit     False
[OUTPUT]
    Name            clickhouse
    Match           *


parsers.conf: |
[PARSER]
    Name   apache
    Format regex
    Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
    Time_Key time
    Time_Format %d/%b/%Y:%H:%M:%S %z

[PARSER]
    Name   apache2
    Format regex
    Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
    Time_Key time
    Time_Format %d/%b/%Y:%H:%M:%S %z

[PARSER]
    Name   apache_error
    Format regex
    Regex  ^\[[^ ]* (?<time>[^\]]*)\] \[(?<level>[^\]]*)\](?: \[pid (?<pid>[^\]]*)\])?( \[client (?<client>[^\]]*)\])? (?<message>.*)$

[PARSER]
    Name   nginx
    Format regex
    Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
    Time_Key time
    Time_Format %d/%b/%Y:%H:%M:%S %z

[PARSER]
    Name   json
    Format json
    Time_Key time
    Time_Format %d/%b/%Y:%H:%M:%S %z

[PARSER]
    Name         docker
    Format       json
    Time_Key     time
    Time_Format  %Y-%m-%dT%H:%M:%S.%L
    Time_Keep    On

[PARSER]
    Name        syslog
    Format      regex
    Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
    Time_Key    time
    Time_Format %b %d %H:%M:%S



---

apiVersion: apps/v1
kind: DaemonSet
metadata:
name: k8s-log-agent
namespace: kube-system
labels:
k8s-app: k8s-log-agent
kubernetes.io/cluster-service: "true"
spec:
selector:
matchLabels:
  k8s-app: k8s-log-agent
  kubernetes.io/cluster-service: "true"
template:
metadata:
  labels:
    k8s-app: k8s-log-agent
    kubernetes.io/cluster-service: "true"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "2020"
    prometheus.io/path: /api/v1/metrics/prometheus
spec:
  containers:
  - name: fluent-bit
    image: iyacontrol/fluent-bit-ck:1.2.2
    imagePullPolicy: Always
    ports:
      - containerPort: 2020
    resources:
      limits:
        cpu: 200m
        memory: 200Mi
      requests:
        cpu: 200m
        memory: 200Mi
    env:
    - name: CLUSTER_NAME
      value: "xxx-cce-prod"
    - name: CLICKHOUSE_HOST
      value: "sg.logs.ck.xxx.service:9000"
    - name: CLICKHOUSE_USER
      value: "admin"
    - name: CLICKHOUSE_PASSWORD
      value: "admin"
    - name: CLICKHOUSE_DATABASE
      value: "scmp"
    - name: CLICKHOUSE_TABLE
      value: "logs"
    - name: NODENAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    volumeMounts:
    - name: varlog
      mountPath: /var/log
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true
    - name: k8s-log-agent-config
      mountPath: /fluent-bit/etc/
  terminationGracePeriodSeconds: 10
  volumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  - name: k8s-log-agent-config
    configMap:
      name: k8s-log-agent-config
  serviceAccountName: k8s-log-agent
  tolerations:
  - key: node-role.kubernetes.io/master
    operator: Exists
    effect: NoSchedule


---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
name: k8s-log-agent-read
roleRef:
apiGroup: rbac.authorization.k8s.io
kind: ClusterRole
name: k8s-log-agent-read
subjects:
- kind: ServiceAccount
name: k8s-log-agent
namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
name: k8s-log-agent-read
rules:
- apiGroups: [""]
resources:
- namespaces
- pods
verbs: ["get", "list", "watch"]

---


apiVersion: v1
kind: ServiceAccount
metadata:
name: k8s-log-agent
namespace: kube-system

