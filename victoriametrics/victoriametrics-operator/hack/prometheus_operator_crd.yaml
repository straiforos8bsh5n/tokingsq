---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: prometheusrules.monitoring.coreos.com
spec:
  conversion:
    strategy: None
  group: monitoring.coreos.com
  names:
    kind: PrometheusRule
    listKind: PrometheusRuleList
    plural: prometheusrules
    singular: prometheusrule
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: ObjectMeta is metadata that all persisted resources must have,
            which includes all objects users must create.
          properties:
            annotations:
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
            clusterName:
              description: The name of the cluster which the object belongs to. This
                is used to distinguish resources with same name and namespace in different
                clusters. This field is not set anywhere right now and apiserver is
                going to ignore it if set in create or update request.
              type: string
            creationTimestamp:
              description: Time is a wrapper around time.Time which supports correct
                marshaling to YAML and JSON.  Wrappers are provided for many of the
                factory methods that the time package offers.
              format: date-time
              type: string
            deletionGracePeriodSeconds:
              description: Number of seconds allowed for this object to gracefully
                terminate before it will be removed from the system. Only set when
                deletionTimestamp is also set. May only be shortened. Read-only.
              format: int64
              type: integer
            deletionTimestamp:
              description: Time is a wrapper around time.Time which supports correct
                marshaling to YAML and JSON.  Wrappers are provided for many of the
                factory methods that the time package offers.
              format: date-time
              type: string
            finalizers:
              description: Must be empty before the object is deleted from the registry.
                Each entry is an identifier for the responsible component that will
                remove the entry from the list. If the deletionTimestamp of the object
                is non-nil, entries in this list can only be removed.
              items:
                type: string
              type: array
            generateName:
              description: |-
                GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

                If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

                Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
              type: string
            generation:
              description: A sequence number representing a specific generation of
                the desired state. Populated by the system. Read-only.
              format: int64
              type: integer
            initializers:
              description: Initializers tracks the progress of initialization.
              properties:
                pending:
                  description: Pending is a list of initializers that must execute
                    in order before this object is visible. When the last pending
                    initializer is removed, and no failing result is set, the initializers
                    struct will be set to nil and the object is considered as initialized
                    and visible to all clients.
                  items:
                    description: Initializer is information about an initializer that
                      has not yet completed.
                    properties:
                      name:
                        description: name of the process that is responsible for initializing
                          this object.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                result:
                  description: Status is a return value for calls that don't return
                    other objects.
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                      type: string
                    code:
                      description: Suggested HTTP return code for this status, 0 if
                        not set.
                      format: int32
                      type: integer
                    details:
                      description: StatusDetails is a set of additional properties
                        that MAY be set by the server to provide additional information
                        about a response. The Reason field of a Status object defines
                        what attributes will be set. Clients must ignore fields that
                        do not match the defined type of each attribute, and should
                        assume that any attribute may be empty, invalid, or under
                        defined.
                      properties:
                        causes:
                          description: The Causes array includes more details associated
                            with the StatusReason failure. Not all StatusReasons may
                            provide detailed causes.
                          items:
                            description: StatusCause provides more information about
                              an api.Status failure, including cases when multiple
                              errors are encountered.
                            properties:
                              field:
                                description: |-
                                  The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

                                  Examples:
                                    "name" - the field "name" on the current resource
                                    "items[0].name" - the field "name" on the first array entry in "items"
                                type: string
                              message:
                                description: A human-readable description of the cause
                                  of the error.  This field may be presented as-is
                                  to a reader.
                                type: string
                              reason:
                                description: A machine-readable description of the
                                  cause of the error. If this value is empty there
                                  is no information available.
                                type: string
                            type: object
                          type: array
                        group:
                          description: The group attribute of the resource associated
                            with the status StatusReason.
                          type: string
                        kind:
                          description: 'The kind attribute of the resource associated
                            with the status StatusReason. On some operations may differ
                            from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: The name attribute of the resource associated
                            with the status StatusReason (when there is a single name
                            which can be described).
                          type: string
                        retryAfterSeconds:
                          description: If specified, the time in seconds before the
                            operation should be retried. Some errors may indicate
                            the client must take an alternate action - for those errors
                            this field may indicate how long to wait before taking
                            the alternate action.
                          format: int32
                          type: integer
                        uid:
                          description: 'UID of the resource. (when there is a single
                            resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                          type: string
                      type: object
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      type: string
                    message:
                      description: A human-readable description of the status of this
                        operation.
                      type: string
                    metadata:
                      description: ListMeta describes metadata that synthetic resources
                        must have, including lists and various status objects. A resource
                        may have only one of {ObjectMeta, ListMeta}.
                      properties:
                        continue:
                          description: continue may be set if the user set a limit
                            on the number of items returned, and indicates that the
                            server has more data available. The value is opaque and
                            may be used to issue another request to the endpoint that
                            served this list to retrieve the next set of available
                            objects. Continuing a consistent list may not be possible
                            if the server configuration has changed or more than a
                            few minutes have passed. The resourceVersion field returned
                            when using this continue value will be identical to the
                            value in the first response, unless you have received
                            this token from an error message.
                          type: string
                        resourceVersion:
                          description: 'String that identifies the server''s internal
                            version of this object that can be used by clients to
                            determine when objects have changed. Value must be treated
                            as opaque by clients and passed unmodified back to the
                            server. Populated by the system. Read-only. More info:
                            https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        selfLink:
                          description: selfLink is a URL representing this object.
                            Populated by the system. Read-only.
                          type: string
                      type: object
                    reason:
                      description: A machine-readable description of why this operation
                        is in the "Failure" status. If this value is empty there is
                        no information available. A Reason clarifies an HTTP status
                        code but does not override it.
                      type: string
                    status:
                      description: 'Status of the operation. One of: "Success" or
                        "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                      type: string
                  type: object
              required:
                - pending
              type: object
            labels:
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            managedFields:
              description: |-
                ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.

                This field is alpha and can be changed or removed without notice.
              items:
                description: ManagedFieldsEntry is a workflow-id, a FieldSet and the
                  group version of the resource that the fieldset applies to.
                properties:
                  apiVersion:
                    description: APIVersion defines the version of this resource that
                      this field set applies to. The format is "group/version" just
                      like the top-level APIVersion field. It is necessary to track
                      the version of a field set because it cannot be automatically
                      converted.
                    type: string
                  fields:
                    description: 'Fields stores a set of fields in a data structure
                      like a Trie. To understand how this is used, see: https://github.com/kubernetes-sigs/structured-merge-diff'
                    type: object
                  manager:
                    description: Manager is an identifier of the workflow managing
                      these fields.
                    type: string
                  operation:
                    description: Operation is the type of operation which lead to
                      this ManagedFieldsEntry being created. The only valid values
                      for this field are 'Apply' and 'Update'.
                    type: string
                  time:
                    description: Time is a wrapper around time.Time which supports
                      correct marshaling to YAML and JSON.  Wrappers are provided
                      for many of the factory methods that the time package offers.
                    format: date-time
                    type: string
                type: object
              type: array
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: |-
                Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
              type: string
            ownerReferences:
              description: List of objects depended by this object. If ALL objects
                in the list have been deleted, this object will be garbage collected.
                If this object is managed by a controller, then an entry in this list
                will point to this controller, with the controller field set to true.
                There cannot be more than one managing controller.
              items:
                description: OwnerReference contains enough information to let you
                  identify an owning object. An owning object must be in the same
                  namespace as the dependent, or be cluster-scoped, so there is no
                  namespace field.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  blockOwnerDeletion:
                    description: If true, AND if the owner has the "foregroundDeletion"
                      finalizer, then the owner cannot be deleted from the key-value
                      store until this reference is removed. Defaults to false. To
                      set this field, a user needs "delete" permission of the owner,
                      otherwise 422 (Unprocessable Entity) will be returned.
                    type: boolean
                  controller:
                    description: If true, this reference points to the managing controller.
                    type: boolean
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                  - apiVersion
                  - kind
                  - name
                  - uid
                type: object
              type: array
            resourceVersion:
              description: |-
                An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
              type: string
            selfLink:
              description: SelfLink is a URL representing this object. Populated by
                the system. Read-only.
              type: string
            uid:
              description: |-
                UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
              type: string
          type: object
        spec:
          description: PrometheusRuleSpec contains specification parameters for a
            Rule.
          properties:
            groups:
              description: Content of Prometheus rule file
              items:
                description: RuleGroup is a list of sequentially evaluated recording
                  and alerting rules.
                properties:
                  interval:
                    type: string
                  name:
                    type: string
                  rules:
                    items:
                      description: Rule describes an alerting or recording rule.
                      properties:
                        alert:
                          type: string
                        annotations:
                          type: object
                        expr:
                          anyOf:
                            - type: string
                            - type: integer
                        for:
                          type: string
                        labels:
                          type: object
                        record:
                          type: string
                      required:
                        - expr
                      type: object
                    type: array
                required:
                  - name
                  - rules
                type: object
              type: array
          type: object
      type: object
  version: v1
  versions:
    - name: v1
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: servicemonitors.monitoring.coreos.com
spec:
  conversion:
    strategy: None
  group: monitoring.coreos.com
  names:
    kind: ServiceMonitor
    listKind: ServiceMonitorList
    plural: servicemonitors
    singular: servicemonitor
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        spec:
          description: ServiceMonitorSpec contains specification parameters for a
            ServiceMonitor.
          properties:
            endpoints:
              description: A list of endpoints allowed as part of this ServiceMonitor.
              items:
                description: Endpoint defines a scrapeable endpoint serving Prometheus
                  metrics.
                properties:
                  basicAuth:
                    description: 'BasicAuth allow an endpoint to authenticate over
                      basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                    properties:
                      password:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          optional:
                            description: Specify whether the Secret or it's key must
                              be defined
                            type: boolean
                        required:
                          - key
                        type: object
                      username:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          optional:
                            description: Specify whether the Secret or it's key must
                              be defined
                            type: boolean
                        required:
                          - key
                        type: object
                    type: object
                  bearerTokenFile:
                    description: File to read bearer token for scraping targets.
                    type: string
                  honorLabels:
                    description: HonorLabels chooses the metric's labels on collisions
                      with target labels.
                    type: boolean
                  interval:
                    description: Interval at which metrics should be scraped
                    type: string
                  metricRelabelings:
                    description: MetricRelabelConfigs to apply to samples before ingestion.
                    items:
                      description: 'RelabelConfig allows dynamic rewriting of the
                        label set, being applied to samples before ingestion. It defines
                        `<metric_relabel_configs>`-section of Prometheus configuration.
                        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                      properties:
                        action:
                          description: Action to perform based on regex matching.
                            Default is 'replace'
                          type: string
                        modulus:
                          description: Modulus to take of the hash of the source label
                            values.
                          format: int64
                          type: integer
                        regex:
                          description: Regular expression against which the extracted
                            value is matched. defailt is '(.*)'
                          type: string
                        replacement:
                          description: Replacement value against which a regex replace
                            is performed if the regular expression matches. Regex
                            capture groups are available. Default is '$1'
                          type: string
                        separator:
                          description: Separator placed between concatenated source
                            label values. default is ';'.
                          type: string
                        sourceLabels:
                          description: The source labels select values from existing
                            labels. Their content is concatenated using the configured
                            separator and matched against the configured regular expression
                            for the replace, keep, and drop actions.
                          items:
                            type: string
                          type: array
                        targetLabel:
                          description: Label to which the resulting value is written
                            in a replace action. It is mandatory for replace actions.
                            Regex capture groups are available.
                          type: string
                      type: object
                    type: array
                  params:
                    description: Optional HTTP URL parameters
                    type: object
                  path:
                    description: HTTP path to scrape for metrics.
                    type: string
                  port:
                    description: Name of the service port this endpoint refers to.
                      Mutually exclusive with targetPort.
                    type: string
                  proxyUrl:
                    description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                      to proxy through this endpoint.
                    type: string
                  relabelings:
                    description: 'RelabelConfigs to apply to samples before ingestion.
                      More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                    items:
                      description: 'RelabelConfig allows dynamic rewriting of the
                        label set, being applied to samples before ingestion. It defines
                        `<metric_relabel_configs>`-section of Prometheus configuration.
                        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                      properties:
                        action:
                          description: Action to perform based on regex matching.
                            Default is 'replace'
                          type: string
                        modulus:
                          description: Modulus to take of the hash of the source label
                            values.
                          format: int64
                          type: integer
                        regex:
                          description: Regular expression against which the extracted
                            value is matched. defailt is '(.*)'
                          type: string
                        replacement:
                          description: Replacement value against which a regex replace
                            is performed if the regular expression matches. Regex
                            capture groups are available. Default is '$1'
                          type: string
                        separator:
                          description: Separator placed between concatenated source
                            label values. default is ';'.
                          type: string
                        sourceLabels:
                          description: The source labels select values from existing
                            labels. Their content is concatenated using the configured
                            separator and matched against the configured regular expression
                            for the replace, keep, and drop actions.
                          items:
                            type: string
                          type: array
                        targetLabel:
                          description: Label to which the resulting value is written
                            in a replace action. It is mandatory for replace actions.
                            Regex capture groups are available.
                          type: string
                      type: object
                    type: array
                  scheme:
                    description: HTTP scheme to use for scraping.
                    type: string
                  scrapeTimeout:
                    description: Timeout after which the scrape is ended
                    type: string
                  targetPort:
                    anyOf:
                      - type: string
                      - type: integer
                  tlsConfig:
                    description: TLSConfig specifies TLS configuration parameters.
                    properties:
                      caFile:
                        description: The CA cert to use for the targets.
                        type: string
                      certFile:
                        description: The client cert file for the targets.
                        type: string
                      insecureSkipVerify:
                        description: Disable target certificate validation.
                        type: boolean
                      keyFile:
                        description: The client key file for the targets.
                        type: string
                      serverName:
                        description: Used to verify the hostname for the targets.
                        type: string
                    type: object
                type: object
              type: array
            jobLabel:
              description: The label to use to retrieve the job name from.
              type: string
            namespaceSelector:
              description: NamespaceSelector is a selector for selecting either all
                namespaces or a list of namespaces.
              properties:
                any:
                  description: Boolean describing whether all namespaces are selected
                    in contrast to a list restricting them.
                  type: boolean
                matchNames:
                  description: List of namespace names.
                  items:
                    type: string
                  type: array
              type: object
            podTargetLabels:
              description: PodTargetLabels transfers labels on the Kubernetes Pod
                onto the target.
              items:
                type: string
              type: array
            sampleLimit:
              description: SampleLimit defines per-scrape limit on number of scraped
                samples that will be accepted.
              format: int64
              type: integer
            selector:
              description: A label selector is a label query over a set of resources.
                The result of matchLabels and matchExpressions are ANDed. An empty
                label selector matches all objects. A null label selector matches
                no objects.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                      - key
                      - operator
                    type: object
                  type: array
                matchLabels:
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
            targetLabels:
              description: TargetLabels transfers labels on the Kubernetes Service
                onto the target.
              items:
                type: string
              type: array
          required:
            - endpoints
            - selector
          type: object
      type: object
  version: v1
  versions:
    - name: v1
      served: true
      storage: true
status:
  acceptedNames:
    kind: ServiceMonitor
    listKind: ServiceMonitorList
    plural: servicemonitors
    singular: servicemonitor
  conditions:
    - lastTransitionTime: "2018-12-04T13:00:28Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: null
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
  storedVersions:
    - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: podmonitors.monitoring.coreos.com
spec:
  group: monitoring.coreos.com
  names:
    kind: PodMonitor
    listKind: PodMonitorList
    plural: podmonitors
    singular: podmonitor
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: PodMonitor defines monitoring for a set of pods.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of desired Pod selection for target discovery
                by Prometheus.
              properties:
                jobLabel:
                  description: The label to use to retrieve the job name from.
                  type: string
                namespaceSelector:
                  description: Selector to select which namespaces the Endpoints objects
                    are discovered from.
                  properties:
                    any:
                      description: Boolean describing whether all namespaces are selected
                        in contrast to a list restricting them.
                      type: boolean
                    matchNames:
                      description: List of namespace names.
                      items:
                        type: string
                      type: array
                  type: object
                podMetricsEndpoints:
                  description: A list of endpoints allowed as part of this PodMonitor.
                  items:
                    description: PodMetricsEndpoint defines a scrapeable endpoint of
                      a Kubernetes Pod serving Prometheus metrics.
                    properties:
                      honorLabels:
                        description: HonorLabels chooses the metric's labels on collisions
                          with target labels.
                        type: boolean
                      honorTimestamps:
                        description: HonorTimestamps controls whether Prometheus respects
                          the timestamps present in scraped data.
                        type: boolean
                      interval:
                        description: Interval at which metrics should be scraped
                        type: string
                      metricRelabelings:
                        description: MetricRelabelConfigs to apply to samples before
                          ingestion.
                        items:
                          description: 'RelabelConfig allows dynamic rewriting of the
                          label set, being applied to samples before ingestion. It
                          defines `<metric_relabel_configs>`-section of Prometheus
                          configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                          properties:
                            action:
                              description: Action to perform based on regex matching.
                                Default is 'replace'
                              type: string
                            modulus:
                              description: Modulus to take of the hash of the source
                                label values.
                              format: int64
                              type: integer
                            regex:
                              description: Regular expression against which the extracted
                                value is matched. Default is '(.*)'
                              type: string
                            replacement:
                              description: Replacement value against which a regex replace
                                is performed if the regular expression matches. Regex
                                capture groups are available. Default is '$1'
                              type: string
                            separator:
                              description: Separator placed between concatenated source
                                label values. default is ';'.
                              type: string
                            sourceLabels:
                              description: The source labels select values from existing
                                labels. Their content is concatenated using the configured
                                separator and matched against the configured regular
                                expression for the replace, keep, and drop actions.
                              items:
                                type: string
                              type: array
                            targetLabel:
                              description: Label to which the resulting value is written
                                in a replace action. It is mandatory for replace actions.
                                Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                      params:
                        additionalProperties:
                          items:
                            type: string
                          type: array
                        description: Optional HTTP URL parameters
                        type: object
                      path:
                        description: HTTP path to scrape for metrics.
                        type: string
                      port:
                        description: Name of the pod port this endpoint refers to. Mutually
                          exclusive with targetPort.
                        type: string
                      proxyUrl:
                        description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                          to proxy through this endpoint.
                        type: string
                      relabelings:
                        description: 'RelabelConfigs to apply to samples before ingestion.
                        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                        items:
                          description: 'RelabelConfig allows dynamic rewriting of the
                          label set, being applied to samples before ingestion. It
                          defines `<metric_relabel_configs>`-section of Prometheus
                          configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                          properties:
                            action:
                              description: Action to perform based on regex matching.
                                Default is 'replace'
                              type: string
                            modulus:
                              description: Modulus to take of the hash of the source
                                label values.
                              format: int64
                              type: integer
                            regex:
                              description: Regular expression against which the extracted
                                value is matched. Default is '(.*)'
                              type: string
                            replacement:
                              description: Replacement value against which a regex replace
                                is performed if the regular expression matches. Regex
                                capture groups are available. Default is '$1'
                              type: string
                            separator:
                              description: Separator placed between concatenated source
                                label values. default is ';'.
                              type: string
                            sourceLabels:
                              description: The source labels select values from existing
                                labels. Their content is concatenated using the configured
                                separator and matched against the configured regular
                                expression for the replace, keep, and drop actions.
                              items:
                                type: string
                              type: array
                            targetLabel:
                              description: Label to which the resulting value is written
                                in a replace action. It is mandatory for replace actions.
                                Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                      scheme:
                        description: HTTP scheme to use for scraping.
                        type: string
                      scrapeTimeout:
                        description: Timeout after which the scrape is ended
                        type: string
                      targetPort:
                        anyOf:
                          - type: integer
                          - type: string
                        description: 'Deprecated: Use ''port'' instead.'
                        x-kubernetes-int-or-string: true
                    type: object
                  type: array
                podTargetLabels:
                  description: PodTargetLabels transfers labels on the Kubernetes Pod
                    onto the target.
                  items:
                    type: string
                  type: array
                sampleLimit:
                  description: SampleLimit defines per-scrape limit on number of scraped
                    samples that will be accepted.
                  format: int64
                  type: integer
                selector:
                  description: Selector to select Pod objects.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the key
                          and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship to
                              a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
              required:
                - podMetricsEndpoints
                - selector
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: probes.monitoring.coreos.com
spec:
  group: monitoring.coreos.com
  names:
    kind: Probe
    listKind: ProbeList
    plural: probes
    singular: probe
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Probe defines monitoring for a set of static targets or ingresses.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of desired Ingress selection for target discovery
                by Prometheus.
              properties:
                interval:
                  description: Interval at which targets are probed using the configured
                    prober. If not specified Prometheus' global scrape interval is used.
                  type: string
                jobName:
                  description: The job name assigned to scraped metrics by default.
                  type: string
                module:
                  description: 'The module to use for probing specifying how to probe
                  the target. Example module configuring in the blackbox exporter:
                  https://github.com/prometheus/blackbox_exporter/blob/master/example.yml'
                  type: string
                prober:
                  description: Specification for the prober to use for probing targets.
                    The prober.URL parameter is required. Targets cannot be probed if
                    left empty.
                  properties:
                    path:
                      description: Path to collect metrics from. Defaults to `/probe`.
                      type: string
                    scheme:
                      description: HTTP scheme to use for scraping. Defaults to `http`.
                      type: string
                    url:
                      description: Mandatory URL of the prober.
                      type: string
                  required:
                    - url
                  type: object
                scrapeTimeout:
                  description: Timeout for scraping metrics from the Prometheus exporter.
                  type: string
                targets:
                  description: Targets defines a set of static and/or dynamically discovered
                    targets to be probed using the prober.
                  properties:
                    ingress:
                      description: Ingress defines the set of dynamically discovered
                        ingress objects which hosts are considered for probing.
                      properties:
                        namespaceSelector:
                          description: Select Ingress objects by namespace.
                          properties:
                            any:
                              description: Boolean describing whether all namespaces
                                are selected in contrast to a list restricting them.
                              type: boolean
                            matchNames:
                              description: List of namespace names.
                              items:
                                type: string
                              type: array
                          type: object
                        relabelingConfigs:
                          description: 'RelabelConfigs to apply to samples before ingestion.
                          More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                          items:
                            description: 'RelabelConfig allows dynamic rewriting of
                            the label set, being applied to samples before ingestion.
                            It defines `<metric_relabel_configs>`-section of Prometheus
                            configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                            properties:
                              action:
                                description: Action to perform based on regex matching.
                                  Default is 'replace'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source
                                  label values.
                                format: int64
                                type: integer
                              regex:
                                description: Regular expression against which the extracted
                                  value is matched. Default is '(.*)'
                                type: string
                              replacement:
                                description: Replacement value against which a regex
                                  replace is performed if the regular expression matches.
                                  Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated source
                                  label values. default is ';'.
                                type: string
                              sourceLabels:
                                description: The source labels select values from existing
                                  labels. Their content is concatenated using the configured
                                  separator and matched against the configured regular
                                  expression for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              targetLabel:
                                description: Label to which the resulting value is written
                                  in a replace action. It is mandatory for replace actions.
                                  Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                        selector:
                          description: Select Ingress objects by labels.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In, NotIn,
                                      Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists or
                                      DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field is
                                "key", the operator is "In", and the values array contains
                                only "value". The requirements are ANDed.
                              type: object
                          type: object
                      type: object
                    staticConfig:
                      description: 'StaticConfig defines static targets which are considers
                      for probing. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#static_config.'
                      properties:
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels assigned to all metrics scraped from the
                            targets.
                          type: object
                        static:
                          description: Targets is a list of URLs to probe using the
                            configured prober.
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []